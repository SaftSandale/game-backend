[
  {
    "SubjectName": "Anwendungsentwicklung",
    "Exercises": [
      {
        "ExerciseText": "Was bedeutet OOP?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          { "Text": "Objektoriertierte Programmierung", "isCorrect": true },
          {
            "Text": "Offensichtlich organisierte Programmierung",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die Grundlegende Konzepte von OOP?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Abstraktion, Verkapselung, Erbe, Polymorphie",
            "isCorrect": true
          },
          {
            "Text": "Abstraktion, Virtualisierung, Erbe, Polymorphie",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Klasse?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Klasse ist vereinfacht gesagt eine Darstellung eines Objekttyps.",
            "isCorrect": true
          },
          {
            "Text": "Klasse ein Ausdruck, wenn eine Person etwas gut findet.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Objekt?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          { "Text": "Ein Objekt ist eine Methode.", "isCorrect": false },
          {
            "Text": "Ein Objekt ist eine Instanz eines Datentyps.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Verkapselung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Verkapselung beschreibt wie viele geschweifte Klammern eine Methode hat.",
            "isCorrect": false
          },
          {
            "Text": "Verkapselung ist ein Attribut und beschreibt die Sichtbarkeit.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist Polymorphie?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Polymorphie beschreibt die Sichtbarkeit.",
            "isCorrect": false
          },
          {
            "Text": "Polymorphie ist nichts anderes als die Zuweisung von Verhalten oder Werten in einer Unterklasse zu etwas, das bereits in der Hauptklasse deklariert wurde.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist Vererbung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Vererbung teilt die Struktur einer Klasse an anderen Klassen.",
            "isCorrect": true
          },
          {
            "Text": "Vererbung erbt den Namen der Klasse.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Konstruktor?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Ein Konstruktor ist eine Bezeichnung für ein Konstrukt.",
            "isCorrect": false
          },
          {
            "Text": "Ein Konstruktor ist eine Methode, die dazu dient, den Zustand eines Objekts zu initialisieren.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Destruktor?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Ein Destruktor ist die letzte Methode, welche vor der Löschung des Objektes aufgerufen wird.",
            "isCorrect": true
          },
          {
            "Text": "Ein Destruktor wird immer vor dem Konstrukt aufgerufen.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Inline-Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Inline-Funktion ist eine Optimierungsmethode von Compilern zur Steigerung der Ausführungsgeschwindigkeit.",
            "isCorrect": true
          },
          {
            "Text": "Eine Inline-Funktion ist eine virtuelle Funktion.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine virtuelle Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine virtuelle Funktion ist eine Funktion einer Klasse, deren Funktionalität in der abgeleiteten Klasse überschrieben werden kann.",
            "isCorrect": true
          },
          {
            "Text": "Eine virtuelle Funktion kann nur in Konstruktoren aufgerufen werden.",
            "isCorrect": false
          }
        ]
      },
	  {
        "ExerciseText": "Mit Git kann man mehrere Zweige in einem Repository erstellen",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Wahr",
            "isCorrect": true
          },
          {
            "Text": "Falsch",
            "isCorrect": false
          }
        ]
      },
	  {
        "ExerciseText": "Git erschien 1997",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
      "ExerciseText": "Git ist nicht für Teams",
      "ExerciseTopic": "VC",
      "Difficulty": 10,
      "Answers": [
        {
          "Text": "Falsch",
          "isCorrect": true
        },
        {
          "Text": "Wahr",
          "isCorrect": false
        }
      ]
    }, 
	  {
        "ExerciseText": "Ist Git und Github das selbe?",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
{
      "ExerciseText": "Git erschien 1997",
      "ExerciseTopic": "VC",
      "Difficulty": 10,
      "Answers": [
        {
          "Text": "Falsch",
          "isCorrect": true
        },
        {
          "Text": "Wahr",
          "isCorrect": false
        }
      ]
    },
      {
        "ExerciseText": "Was ist GIT?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Eine Versionsverwaltung",
            "isCorrect": true
          },
          {
            "Text": "Ein CMS",
            "isCorrect": false
          },
          {
            "Text": "Ein Javascript Framework",
            "isCorrect": false
          },
          {
            "Text": "Ein Repository",
            "isCorrect": false
          }
        ]
      },
	  {
        "ExerciseText": "Was ist ein Branch",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "eine unabhängige Entwicklungslinie",
            "isCorrect": true
          },
          {
            "Text": "Ein CMS",
            "isCorrect": false
          },
          {
            "Text": "Ein Javascript Framework",
            "isCorrect": false
          },
          {
            "Text": "Ein Repository",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welche Programmiersprache nutzt Git?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "C",
            "isCorrect": true
          },
          {
            "Text": "HTML",
            "isCorrect": false
          },
          {
            "Text": "PHP",
            "isCorrect": false
          },
          {
            "Text": "C++",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welcher Command erstellt eine Lokale Copy vom Repository?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "clone",
            "isCorrect": true
          },
          {
            "Text": "checkout",
            "isCorrect": false
          },
          {
            "Text": "push",
            "isCorrect": false
          },
          {
            "Text": "pull",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welcher Command erstellt ein neues Repository im Ordner?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "git init",
            "isCorrect": true
          },
          {
            "Text": "git reset",
            "isCorrect": false
          },
          {
            "Text": "git log",
            "isCorrect": false
          },
          {
            "Text": "git create",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Friend-Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Friend-Funktion befreundet Klassen über mehrere Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Eine Friend-Funktion ist ein Freund einer Klasse, der auf öffentliche, private oder geschützte Daten in derselben Klasse zugreifen darf.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist die Funktionsüberladung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Sie ermöglicht das Anlegen mehrerer Methoden mit gleichem Namen, die sich durch die Art des Inputs und Outputs der Funktion voneinander unterscheiden.",
            "isCorrect": true
          },
          {
            "Text": "Dies ist eine Prozedur mit Rückgabeparameter.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Operatorüberladung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Das Überladen von Operatoren ist eine Funktion, bei der verschiedene Operatoren angewendet werden und die von den Argumenten abhängt.",
            "isCorrect": true
          },
          {
            "Text": "Sie ermöglicht das Anlegen mehrerer Methoden mit gleichem Namen, die sich durch die Art des Inputs und Outputs der Funktion voneinander unterscheiden.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine abstrakte Klasse?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine abstrakte Klasse ist keine Klasse.",
            "isCorrect": false
          },
          {
            "Text": "Eine abstrakte Klasse ist eine Klasse, die nicht instanziiert werden kann.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Wozu dient die finalize Methode?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Die Finalize-Methode hilft bei der Durchführung von Aufräumarbeiten an den Ressourcen, die derzeit nicht verwendet werden. Die Finalize-Methoden sind geschützt.",
            "isCorrect": true
          },
          {
            "Text": "Eine finalize Methode ist eine Prozedur.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Prozedur?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Prozedur ist eine Funktion ohne Rückgabeparameter.",
            "isCorrect": true
          },
          {
            "Text": "Eine finalize Methode ist eine Prozedur.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die verschiedenen Arten von Argumenten?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Call by Value und Call by Reference.",
            "isCorrect": true
          },
          {
            "Text": "Call by Argument und Call by Value.",
            "isCorrect": false
          },
          {
            "Text": "Call by Method und Call by Procedur.",
            "isCorrect": false
          },
          {
            "Text": "Call by Reference und Call by Amount.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist das Super-Schlüsselwort?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Das Super-Schlüsselwort beschreibt eine gute Methode.",
            "isCorrect": false
          },
          {
            "Text": "Das Super-Schlüsselwort wird verwendet, um die überschriebene Methode aufzurufen, die eine der Methoden ihrer Oberklasse überschreibt.",
            "isCorrect": true
          },
          {
            "Text": "Super ist das Schlüsselwort, welche eine abstrakte Methode beschreibt.",
            "isCorrect": false
          },
          {
            "Text": "Das Super-Schlüsselwort gibt es nicht.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Methoden-Overriding?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Das Überschreiben von Methoden gibt es nicht.",
            "isCorrect": false
          },
          {
            "Text": "Das Methoden-Overriding gibt es nur in prozeduralen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Das Überschreiben von Methoden ist eine Funktionalität, die es einer Unterklasse ermöglicht, die Implementierung einer Methode bereitzustellen, die in der Hauptklasse überschrieben wird.",
            "isCorrect": true
          },
          {
            "Text": "Methoden-Overriding ist ein anderer Name für Funktionsüberladungen.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Interface?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Ein Interface ist eine Sammlung von abstrakten Methode.",
            "isCorrect": true
          },
          {
            "Text": "Ein Interface ist das Gesicht einer Methode.",
            "isCorrect": false
          },
          {
            "Text": "Ein Interface gibt es nur in prozedualen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Ein Interface ist keine Sammlung von abstrakten Methode.",
            "isCorrect": false
          }
        ]
      },
          {
            "ExerciseText": "Was ist Exception Handing?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Exceptions gibt es in objektorientierten Sprachen nicht.",
                "isCorrect": false
              },
              {
                "Text": "Exceptions sind nicht mehr aktuell, heute wird Troubleshooting genutzt.",
                "isCorrect": false
              },
              {
                "Text": "Eine Exception ist ein Ereignis, das während der Ausführung eines Programms auftritt. Exceptions können von jedem Typ sein - Runtime exception, Error exceptions.",
                "isCorrect": true
              },
              {
                "Text": "Eine Exception darf nur in Unit Tests verwendet werden.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was sind Token?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Tokens ist ein anderer Begiff für Strings.",
                "isCorrect": false
              },
              {
                "Text": "Ein Compiler erkennt ein Token, und es kann nicht in Komponentenelemente zerlegt werden.",
                "isCorrect": true
              },
              {
                "Text": "Alle Variablen im Konstruktor werden Tokens genannt.",
                "isCorrect": false
              },
              {
                "Text": "Übergabeparamter von Methoden werden auch Token genannt.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist der Hauptunterschied zwischen Overloading und Overriding?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Es gibt prin­zi­pi­ell keinen Unterschied. Overloading heißt es bei Variablen und Overriding bei Methoden.",
                "isCorrect": false
              },
              {
                "Text": "Overriding gibt es nur bei prozedualen Programmiersprachen.",
                "isCorrect": false
              },
              {
                "Text": "Overloading und Overriding gibt es nur in Java.",
                "isCorrect": false
              },
              {
                "Text": "Overloading ist eine statische Bindung, während Overriding eine dynamische Bindung ist.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist der Hauptunterschied zwischen einer Klasse und einem Objekt?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann Unterklassen haben, während ein Objekt keine Unterobjekte hat.",
                "isCorrect": true
              },
              {
                "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann keine Unterklassen haben, während ein Objekt Unterobjekte hat.",
                "isCorrect": false
              },
              {
                "Text": "Ein Objekt ist keine Instanz einer Klasse. Eine Klasse kann Unterklassen haben, während ein Objekt nur ein Unterobjekte hat.",
                "isCorrect": false
              },
              {
                "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann nur fünf Unterklassen haben, während ein Objekt keine Unterobjekte hat.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist Abstraktion?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Abstraktion gibt es nicht in objektorierntierten Programmiersprachen.",
                "isCorrect": false
              },
              {
                "Text": "Abstraktion ist ein nützliches Merkmal von objektorierntierten Programmiersprachen, das dem Anwender eines Objekts nur die notwendigen Details zeigt.",
                "isCorrect": true
              },
              {
                "Text": "Abstraktion gibt es nur in Java.",
                "isCorrect": false
              },
              {
                "Text": "Abstraktion werden nur in Enmus verwendet.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was sind die Zugriffsmodifikatoren?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Private, Profected, Public, Friend und Protected Friend",
                "isCorrect": false
              },
              {
                "Text": "Private, Protected, Publicize, Friend und Protected Friend",
                "isCorrect": false
              },
              {
                "Text": "Private, Defended, Puplic, Friend und Defended Friend",
                "isCorrect": false
              },
              {
                "Text": "Private, Protected, Public, Friend und Protected Friend",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Wie können die Basismethode aufgerufen werden, ohne eine Instanz zu erzeugen?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Dies ist nur in abstrakten Klassen möglich.",
                "isCorrect": false
              },
              {
                "Text": "Wenn die Methode statisch ist kann diese ohne Instanz aufgerufen werden.",
                "isCorrect": true
              },
              {
                "Text": "Jede Methode einer Klasse kann ohne Instanz nicht aufgerufen werden.",
                "isCorrect": false
              },
              {
                "Text": "Dies ist nur in C++ möglich.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was sind die verschiedenen Arten von Konstruktoren?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Default Konstruktor, Parameter-Konstruktor, Copy Konstruktor und Destruktor.",
                "isCorrect": false
              },
              {
                "Text": "Default Konstruktor und Copy Konstruktor.",
                "isCorrect": false
              },
              {
                "Text": "Default Konstruktor, Parameter-Konstruktor und Copy Konstruktor.",
                "isCorrect": true
              },
              {
                "Text": "Konstruktor und Destruktor.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist ein \"this\" Zeiger?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "THIS-Zeiger verweist auf das aktuelle Objekt einer Klasse.",
                "isCorrect": true
              },
              {
                "Text": "Diesen Zeiger gibt es nur in C++.",
                "isCorrect": false
              },
              {
                "Text": "Zeiger gibt es nur in prozudualen Programmiersprachen.",
                "isCorrect": false
              },
              {
                "Text": "THIS-Zeiger verweisen auf die Klasse des Objektes.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist der Unterschied zwischen einer Struktur und einer Klasse?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Eine Struktur ist ein Teil einer Klasse.",
                "isCorrect": false
              },
              {
                "Text": "Strukturen gibt es nur in Java.",
                "isCorrect": false
              },
              {
                "Text": "Strukturen bestehen nur aus Methoden.",
                "isCorrect": false
              },
              {
                "Text": "Eine Struktur wird zur Gruppierung von Daten verwendet, während eine Klasse zur Gruppierung von Daten und Methoden verwendet werden kann.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Der Programmierer führt den Blackbox Test durch.",
            "ExerciseTopic": "Testing",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch",
                "isCorrect": true
              },
              {
                "Text": "Wahr",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Der Programmierer führt den Whitebox Test durch.",
            "ExerciseTopic": "Testing",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch",
                "isCorrect": false
              },
              {
                "Text": "Wahr",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "JUnit bietet sich für das Regressionstesten an.",
            "ExerciseTopic": "Testing",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch",
                "isCorrect": false
              },
              {
                "Text": "Wahr",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist das Besondere am Test-Driven Development(TDD)?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Es wird der Hauptfokus auf die Tests gelegt",
                "isCorrect": false
              },
              {
                "Text": "Das sogenannte Test-Driven ist ein eigenes Framework",
                "isCorrect": false
              },
              {
                "Text": "Dieses Verfahren ist ein Teil der Prozeduralen Programmierung ",
                "isCorrect": false
              },
              {
                "Text": "Es wird erst der Test geschrieben und dann der eigentliche Code.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was testet der Unit-Test?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "explizit die Konstruktoren",
                "isCorrect": false
              },
              {
                "Text": "einzelne Variablen",
                "isCorrect": false
              },
              {
                "Text": "Den kompletten Code",
                "isCorrect": false
              },
              {
                "Text": "Kleinere Abschnitte eines Codes z.B einzelne Funktionen.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was testet der Intergrations-Test?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Explizit die Konstruktoren",
                "isCorrect": false
              },
              {
                "Text": "Einzelne Variablen",
                "isCorrect": false
              },
              {
                "Text": "Testet ob ein Integrationshintergrund vorliegt",
                "isCorrect": false
              },
              {
                "Text": "Der Integrations-Test testet Code im zusammenspiel.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist ein Beta-Test?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Ist das gleiche wie der Whitebox-Test",
                "isCorrect": false
              },
              {
                "Text": "Dieser Test existiert nicht.",
                "isCorrect": false
              },
              {
                "Text": "Keine dieser Aussagen trifft zu.",
                "isCorrect": false
              },
              {
                "Text": "Es wird eine Beta-Version entwickelt diese wird dann vom Endbenutzer getestet.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Welcher Software-Test exisitiert nicht",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Komponententest",
                "isCorrect": false
              },
              {
                "Text": "Systemtest",
                "isCorrect": false
              },
              {
                "Text": "Schreibtisch-Test",
                "isCorrect": false
              },
              {
                "Text": "RT-PCR-Test",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Vom Anwender gefundene Fehler sind zurückzuführen auf",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Pech",
                "isCorrect": false
              },
              {
                "Text": "einen schlechten Programmierer",
                "isCorrect": false
              },
              {
                "Text": "schlechte qualität der Software",
                "isCorrect": false
              },
              {
                "Text": "nicht ausreichend getestet",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Wann sollte man aufhören zu testen",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Wenn die eingeplante Zeit zu Ende ist",
                "isCorrect": false
              },
              {
                "Text": "wenn alle Tests durchgelaufen sind",
                "isCorrect": false
              },
              {
                "Text": "Wenn man keine Lust mehr hat",
                "isCorrect": false
              },
              {
                "Text": "wenn alle Tests durchgelaufen sind und sie keine Fehler ausgegben haben",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist der Unterschied zwischen re-testing und Regressions-Test",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "re-testing is done after faults are fixed; regression testing is done earlier",
                "isCorrect": false
              },
              {
                "Text": "re-testing looks for unexcpected side effects; regression testing is repeating those tests",
                "isCorrect": false
              },
              {
                "Text": "re-testing is done by developers; regression testing is done by independent",
                "isCorrect": false
              },
              {
                "Text": " re-testing is running a test againg; regressions testing looks for unexpet side effects ",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Die Norm, die Definitionen von Prüfbegriffen enthält, ist",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "ISO/IEC 12207",
                "isCorrect": false
              },
              {
                "Text": "BS7925-2",
                "isCorrect": false
              },
              {
                "Text": "ANSI/IEEE 829",
                "isCorrect": false
              },
              {
                "Text": "BS7925-1",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Ein Tool, das die Rückverfolgbarkeit, die Aufzeichnung von Fehlern von Tests unterstützt, heißt",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "a dynamic analysis tool",
                "isCorrect": false
              },
              {
                "Text": "a test execution tool",
                "isCorrect": false
              },
              {
                "Text": "a test management tool",
                "isCorrect": false
              },
              {
                "Text": "a debugging tool",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Welche der folgenden Antwortmöglichkeiten ist kein Teil des perfomance tests?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "response time",
                "isCorrect": false
              },
              {
                "Text": "transaction rates",
                "isCorrect": false
              },
              {
                "Text": "simulating many users",
                "isCorrect": false
              },
              {
                "Text": "recovery test",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Welche Informationen sollte in einem incident report stehen?",
            "ExerciseTopic": "Testing",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Details zur Testumgebung",
                "isCorrect": false
              },
              {
                "Text": "Schwere und Vorrangigkeit",
                "isCorrect": false
              },
              {
                "Text": "Wie der Fehler reproduziert werden kann.",
                "isCorrect": false
              },
              {
                "Text": "Ein Lösungsvorschlag für den Fehler.",
                "isCorrect": true
              }
            ]
          }
    ]
  }
]
