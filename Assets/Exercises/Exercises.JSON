[
  {
    "SubjectName": "Anwendungsentwicklung",
    "Exercises": [
      {
        "ExerciseText": "Was bedeutet OOP?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          { "Text": "Objektoriertierte Programmierung", "isCorrect": true },
          {
            "Text": "Offensichtlich organisierte Programmierung",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die Grundlegende Konzepte von OOP?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Abstraktion, Verkapselung, Erbe, Polymorphie",
            "isCorrect": true
          },
          {
            "Text": "Abstraktion, Virtualisierung, Erbe, Polymorphie",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Klasse?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Klasse ist vereinfacht gesagt eine Darstellung eines Objekttyps.",
            "isCorrect": true
          },
          {
            "Text": "Klasse ein Ausdruck, wenn eine Person etwas gut findet.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Objekt?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          { "Text": "Ein Objekt ist eine Methode.", "isCorrect": false },
          {
            "Text": "Ein Objekt ist eine Instanz eines Datentyps.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Verkapselung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Verkapselung beschreibt wie viele geschweifte Klammern eine Methode hat.",
            "isCorrect": false
          },
          {
            "Text": "Verkapselung ist ein Attribut und beschreibt die Sichtbarkeit.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist Polymorphie?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Polymorphie beschreibt die Sichtbarkeit.",
            "isCorrect": false
          },
          {
            "Text": "Polymorphie ist nichts anderes als die Zuweisung von Verhalten oder Werten in einer Unterklasse zu etwas, das bereits in der Hauptklasse deklariert wurde.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist Vererbung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Vererbung teilt die Struktur einer Klasse an anderen Klassen.",
            "isCorrect": true
          },
          {
            "Text": "Vererbung erbt den Namen der Klasse.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Konstruktor?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Ein Konstruktor ist eine Bezeichnung für ein Konstrukt.",
            "isCorrect": false
          },
          {
            "Text": "Ein Konstruktor ist eine Methode, die dazu dient, den Zustand eines Objekts zu initialisieren.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Destruktor?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Ein Destruktor ist die letzte Methode, welche vor der Löschung des Objektes aufgerufen wird.",
            "isCorrect": true
          },
          {
            "Text": "Ein Destruktor wird immer vor dem Konstrukt aufgerufen.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Inline-Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Inline-Funktion ist eine Optimierungsmethode von Compilern zur Steigerung der Ausführungsgeschwindigkeit.",
            "isCorrect": true
          },
          {
            "Text": "Eine Inline-Funktion ist eine virtuelle Funktion.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine virtuelle Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine virtuelle Funktion ist eine Funktion einer Klasse, deren Funktionalität in der abgeleiteten Klasse überschrieben werden kann.",
            "isCorrect": true
          },
          {
            "Text": "Eine virtuelle Funktion kann nur in Konstruktoren aufgerufen werden.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "GIT funktioniert nur auf Windows",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "GIT funktioniert nur auf MacOS",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Mit Git kann man mehrere Zweige in einem Repository erstellen",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Wahr",
            "isCorrect": true
          },
          {
            "Text": "Falsch",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git erschien 1997",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git ist nicht für Teams",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Ist Git und Github das selbe?",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git gibt es nur in Europa",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Ein Versionskontrollsystem funktioniert nicht auf Laptops",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git ist Dezentralisiert",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Wahr",
            "isCorrect": true
          },
          {
            "Text": "Falsch",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git funktioniert nur mit Javascript Projekten",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Die erste Versionsverwaltung wurde im Jahr 2003 released",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Die erste Versionsverwaltung erschien in den 1970er",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Wahr",
            "isCorrect": true
          },
          {
            "Text": "Falsch",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Die erste Versionsverwaltung erschien in den 1980er",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Jedes Git Repository ist Öffentlich zugänglich",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Jedes Git Repository ist Öffentlich zugänglich",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Jede Versionsverwaltung funktioniert nur auf Linux",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Der Erfinder der Versionsverwaltung hieß Manuel Schreck",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Github wird nur in Asien benutzt",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Git kann man nicht mit einer GUI benutzen",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Github wird nur in Asien benutzt",
        "ExerciseTopic": "VC",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist GIT?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Eine Versionsverwaltung",
            "isCorrect": true
          },
          {
            "Text": "Ein CMS",
            "isCorrect": false
          },
          {
            "Text": "Ein Javascript Framework",
            "isCorrect": false
          },
          {
            "Text": "Ein Repository",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wann kam die erste Versionsverwaltung?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "1972",
            "isCorrect": true
          },
          {
            "Text": "1997",
            "isCorrect": false
          },
          {
            "Text": "1978",
            "isCorrect": false
          },
          {
            "Text": "2001",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was macht Git Status",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "gibt den Status des Arbeitsverzeichnisses und der Staging-Umgebung zurück",
            "isCorrect": true
          },
          {
            "Text": "Zeigt den Akkustand des Gerätes an",
            "isCorrect": false
          },
          {
            "Text": "Pusht ins Repository",
            "isCorrect": false
          },
          {
            "Text": "Checkt fehlerhafte Dateien",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Womit kannst du dir die Commits anzeigen lassen",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "git log",
            "isCorrect": true
          },
          {
            "Text": "git commit",
            "isCorrect": false
          },
          {
            "Text": "git status",
            "isCorrect": false
          },
          {
            "Text": "git push",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wie wechselt man in den Branch 'test' ",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "git checkout test",
            "isCorrect": true
          },
          {
            "Text": "git pull test",
            "isCorrect": false
          },
          {
            "Text": "git commit test",
            "isCorrect": false
          },
          {
            "Text": "git push test",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wie erstellt mein einen neuen Branch?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "git branch new_branch",
            "isCorrect": true
          },
          {
            "Text": "git new branch",
            "isCorrect": false
          },
          {
            "Text": "git commit new_branch",
            "isCorrect": false
          },
          {
            "Text": "git pull branch",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was macht Git branch",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Zeigt Dir deine lokalen Branches an",
            "isCorrect": true
          },
          {
            "Text": "Pusht in das Remote-Repository",
            "isCorrect": false
          },
          {
            "Text": "Zeigt dir alle Änderungen an",
            "isCorrect": false
          },
          {
            "Text": "Checkt fehlerhafte Dateien",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was macht Git add",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Fügt Änderungen aus dem Arbeitsverzeichnis zur Staging-Umgebung hinzu",
            "isCorrect": true
          },
          {
            "Text": "Checkt den Status der CPU",
            "isCorrect": false
          },
          {
            "Text": "Pusht ins Repository",
            "isCorrect": false
          },
          {
            "Text": "Checkt fehlerhafte Dateien",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wofür benutzt man ein Versionskontrollsystem",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Um auf verschiedene Versionen und Änderungen zugreifen zu können",
            "isCorrect": true
          },
          {
            "Text": "Um sein Projekt geheim zu halten",
            "isCorrect": false
          },
          {
            "Text": "Damit man nicht im Team arbeiten muss",
            "isCorrect": false
          },
          {
            "Text": "Um Fehlerhafte Dateien zu erkennen",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Branch",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "eine unabhängige Entwicklungslinie",
            "isCorrect": true
          },
          {
            "Text": "Ein CMS",
            "isCorrect": false
          },
          {
            "Text": "Ein Javascript Framework",
            "isCorrect": false
          },
          {
            "Text": "Ein Repository",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welche Programmiersprache nutzt Git?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "C",
            "isCorrect": true
          },
          {
            "Text": "HTML",
            "isCorrect": false
          },
          {
            "Text": "PHP",
            "isCorrect": false
          },
          {
            "Text": "C++",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welcher Command erstellt eine Lokale Copy vom Repository?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "clone",
            "isCorrect": true
          },
          {
            "Text": "checkout",
            "isCorrect": false
          },
          {
            "Text": "push",
            "isCorrect": false
          },
          {
            "Text": "pull",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Welcher Command erstellt ein neues Repository im Ordner?",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "git init",
            "isCorrect": true
          },
          {
            "Text": "git reset",
            "isCorrect": false
          },
          {
            "Text": "git log",
            "isCorrect": false
          },
          {
            "Text": "git create",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was macht Git pull",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Um Inhalte aus einem Remote-Repository herunterzuladen",
            "isCorrect": true
          },
          {
            "Text": "Um Inhalte in ein Remote-Repository hochzuladen",
            "isCorrect": false
          },
          {
            "Text": "Um Inhalte aus einem Remote-Repository zu löschen",
            "isCorrect": false
          },
          {
            "Text": "Wechselt den Branch",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wofür benutzt man Git remote",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Um Verbindungen mit anderen Repositorys erstellen, abrufen und löschen.",
            "isCorrect": true
          },
          {
            "Text": "Um auf andere Computer zuzugreifen",
            "isCorrect": false
          },
          {
            "Text": "Um Festplattenspeicher zu sparen",
            "isCorrect": false
          },
          {
            "Text": "damit man keinen Code Editor benutzen muss",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Wofür benutzt man Git fetch",
        "ExerciseTopic": "VC",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Um Änderungen aus einem Remote-Repository in das lokale Repository abzuholen.",
            "isCorrect": true
          },
          {
            "Text": "Um auf andere Computer zuzugreifen",
            "isCorrect": false
          },
          {
            "Text": "Um Änderungen in das Remote-Repository zu pushen",
            "isCorrect": false
          },
          {
            "Text": "damit man keinen Code Editor benutzen muss",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Friend-Funktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Friend-Funktion befreundet Klassen über mehrere Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Eine Friend-Funktion ist ein Freund einer Klasse, der auf öffentliche, private oder geschützte Daten in derselben Klasse zugreifen darf.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist die Funktionsüberladung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Sie ermöglicht das Anlegen mehrerer Methoden mit gleichem Namen, die sich durch die Art des Inputs und Outputs der Funktion voneinander unterscheiden.",
            "isCorrect": true
          },
          {
            "Text": "Dies ist eine Prozedur mit Rückgabeparameter.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Operatorüberladung?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Das Überladen von Operatoren ist eine Funktion, bei der verschiedene Operatoren angewendet werden und die von den Argumenten abhängt.",
            "isCorrect": true
          },
          {
            "Text": "Sie ermöglicht das Anlegen mehrerer Methoden mit gleichem Namen, die sich durch die Art des Inputs und Outputs der Funktion voneinander unterscheiden.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine abstrakte Klasse?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine abstrakte Klasse ist keine Klasse.",
            "isCorrect": false
          },
          {
            "Text": "Eine abstrakte Klasse ist eine Klasse, die nicht instanziiert werden kann.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Wozu dient die finalize Methode?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Die Finalize-Methode hilft bei der Durchführung von Aufräumarbeiten an den Ressourcen, die derzeit nicht verwendet werden. Die Finalize-Methoden sind geschützt.",
            "isCorrect": true
          },
          {
            "Text": "Eine finalize Methode ist eine Prozedur.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist eine Prozedur?",
        "ExerciseTopic": "OOP",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Eine Prozedur ist eine Funktion ohne Rückgabeparameter.",
            "isCorrect": true
          },
          {
            "Text": "Eine finalize Methode ist eine Prozedur.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die verschiedenen Arten von Argumenten?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Call by Value und Call by Reference.",
            "isCorrect": true
          },
          {
            "Text": "Call by Argument und Call by Value.",
            "isCorrect": false
          },
          {
            "Text": "Call by Method und Call by Procedur.",
            "isCorrect": false
          },
          {
            "Text": "Call by Reference und Call by Amount.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist das Super-Schlüsselwort?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Das Super-Schlüsselwort beschreibt eine gute Methode.",
            "isCorrect": false
          },
          {
            "Text": "Das Super-Schlüsselwort wird verwendet, um die überschriebene Methode aufzurufen, die eine der Methoden ihrer Oberklasse überschreibt.",
            "isCorrect": true
          },
          {
            "Text": "Super ist das Schlüsselwort, welche eine abstrakte Methode beschreibt.",
            "isCorrect": false
          },
          {
            "Text": "Das Super-Schlüsselwort gibt es nicht.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Methoden-Overriding?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Das Überschreiben von Methoden gibt es nicht.",
            "isCorrect": false
          },
          {
            "Text": "Das Methoden-Overriding gibt es nur in prozeduralen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Das Überschreiben von Methoden ist eine Funktionalität, die es einer Unterklasse ermöglicht, die Implementierung einer Methode bereitzustellen, die in der Hauptklasse überschrieben wird.",
            "isCorrect": true
          },
          {
            "Text": "Methoden-Overriding ist ein anderer Name für Funktionsüberladungen.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Interface?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Ein Interface ist eine Sammlung von abstrakten Methode.",
            "isCorrect": true
          },
          {
            "Text": "Ein Interface ist das Gesicht einer Methode.",
            "isCorrect": false
          },
          {
            "Text": "Ein Interface gibt es nur in prozedualen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Ein Interface ist keine Sammlung von abstrakten Methode.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Exception Handing?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Exceptions gibt es in objektorientierten Sprachen nicht.",
            "isCorrect": false
          },
          {
            "Text": "Exceptions sind nicht mehr aktuell, heute wird Troubleshooting genutzt.",
            "isCorrect": false
          },
          {
            "Text": "Eine Exception ist ein Ereignis, das während der Ausführung eines Programms auftritt. Exceptions können von jedem Typ sein - Runtime exception, Error exceptions.",
            "isCorrect": true
          },
          {
            "Text": "Eine Exception darf nur in Unit Tests verwendet werden.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind Token?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Tokens ist ein anderer Begiff für Strings.",
            "isCorrect": false
          },
          {
            "Text": "Ein Compiler erkennt ein Token, und es kann nicht in Komponentenelemente zerlegt werden.",
            "isCorrect": true
          },
          {
            "Text": "Alle Variablen im Konstruktor werden Tokens genannt.",
            "isCorrect": false
          },
          {
            "Text": "Übergabeparamter von Methoden werden auch Token genannt.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist der Hauptunterschied zwischen Overloading und Overriding?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Es gibt prin­zi­pi­ell keinen Unterschied. Overloading heißt es bei Variablen und Overriding bei Methoden.",
            "isCorrect": false
          },
          {
            "Text": "Overriding gibt es nur bei prozedualen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Overloading und Overriding gibt es nur in Java.",
            "isCorrect": false
          },
          {
            "Text": "Overloading ist eine statische Bindung, während Overriding eine dynamische Bindung ist.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist der Hauptunterschied zwischen einer Klasse und einem Objekt?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann Unterklassen haben, während ein Objekt keine Unterobjekte hat.",
            "isCorrect": true
          },
          {
            "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann keine Unterklassen haben, während ein Objekt Unterobjekte hat.",
            "isCorrect": false
          },
          {
            "Text": "Ein Objekt ist keine Instanz einer Klasse. Eine Klasse kann Unterklassen haben, während ein Objekt nur ein Unterobjekte hat.",
            "isCorrect": false
          },
          {
            "Text": "Ein Objekt ist eine Instanz einer Klasse. Eine Klasse kann nur fünf Unterklassen haben, während ein Objekt keine Unterobjekte hat.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist Abstraktion?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Abstraktion gibt es nicht in objektorierntierten Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "Abstraktion ist ein nützliches Merkmal von objektorierntierten Programmiersprachen, das dem Anwender eines Objekts nur die notwendigen Details zeigt.",
            "isCorrect": true
          },
          {
            "Text": "Abstraktion gibt es nur in Java.",
            "isCorrect": false
          },
          {
            "Text": "Abstraktion werden nur in Enmus verwendet.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die Zugriffsmodifikatoren?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Private, Profected, Public, Friend und Protected Friend",
            "isCorrect": false
          },
          {
            "Text": "Private, Protected, Publicize, Friend und Protected Friend",
            "isCorrect": false
          },
          {
            "Text": "Private, Defended, Puplic, Friend und Defended Friend",
            "isCorrect": false
          },
          {
            "Text": "Private, Protected, Public, Friend und Protected Friend",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Wie können die Basismethode aufgerufen werden, ohne eine Instanz zu erzeugen?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Dies ist nur in abstrakten Klassen möglich.",
            "isCorrect": false
          },
          {
            "Text": "Wenn die Methode statisch ist kann diese ohne Instanz aufgerufen werden.",
            "isCorrect": true
          },
          {
            "Text": "Jede Methode einer Klasse kann ohne Instanz nicht aufgerufen werden.",
            "isCorrect": false
          },
          {
            "Text": "Dies ist nur in C++ möglich.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was sind die verschiedenen Arten von Konstruktoren?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Default Konstruktor, Parameter-Konstruktor, Copy Konstruktor und Destruktor.",
            "isCorrect": false
          },
          {
            "Text": "Default Konstruktor und Copy Konstruktor.",
            "isCorrect": false
          },
          {
            "Text": "Default Konstruktor, Parameter-Konstruktor und Copy Konstruktor.",
            "isCorrect": true
          },
          {
            "Text": "Konstruktor und Destruktor.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein \"this\" Zeiger?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "THIS-Zeiger verweist auf das aktuelle Objekt einer Klasse.",
            "isCorrect": true
          },
          {
            "Text": "Diesen Zeiger gibt es nur in C++.",
            "isCorrect": false
          },
          {
            "Text": "Zeiger gibt es nur in prozudualen Programmiersprachen.",
            "isCorrect": false
          },
          {
            "Text": "THIS-Zeiger verweisen auf die Klasse des Objektes.",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Was ist der Unterschied zwischen einer Struktur und einer Klasse?",
        "ExerciseTopic": "OOP",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Eine Struktur ist ein Teil einer Klasse.",
            "isCorrect": false
          },
          {
            "Text": "Strukturen gibt es nur in Java.",
            "isCorrect": false
          },
          {
            "Text": "Strukturen bestehen nur aus Methoden.",
            "isCorrect": false
          },
          {
            "Text": "Eine Struktur wird zur Gruppierung von Daten verwendet, während eine Klasse zur Gruppierung von Daten und Methoden verwendet werden kann.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Der Programmierer führt den Blackbox Test durch.",
        "ExerciseTopic": "Testing",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": true
          },
          {
            "Text": "Wahr",
            "isCorrect": false
          }
        ]
      },
      {
        "ExerciseText": "Der Programmierer führt den Whitebox Test durch.",
        "ExerciseTopic": "Testing",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": false
          },
          {
            "Text": "Wahr",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "JUnit bietet sich für das Regressionstesten an.",
        "ExerciseTopic": "Testing",
        "Difficulty": 10,
        "Answers": [
          {
            "Text": "Falsch",
            "isCorrect": false
          },
          {
            "Text": "Wahr",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist das Besondere am Test-Driven Development(TDD)?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Es wird der Hauptfokus auf die Tests gelegt",
            "isCorrect": false
          },
          {
            "Text": "Das sogenannte Test-Driven ist ein eigenes Framework",
            "isCorrect": false
          },
          {
            "Text": "Dieses Verfahren ist ein Teil der Prozeduralen Programmierung ",
            "isCorrect": false
          },
          {
            "Text": "Es wird erst der Test geschrieben und dann der eigentliche Code.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was testet der Unit-Test?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "explizit die Konstruktoren",
            "isCorrect": false
          },
          {
            "Text": "einzelne Variablen",
            "isCorrect": false
          },
          {
            "Text": "Den kompletten Code",
            "isCorrect": false
          },
          {
            "Text": "Kleinere Abschnitte eines Codes z.B einzelne Funktionen.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was testet der Intergrations-Test?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Explizit die Konstruktoren",
            "isCorrect": false
          },
          {
            "Text": "Einzelne Variablen",
            "isCorrect": false
          },
          {
            "Text": "Testet ob ein Integrationshintergrund vorliegt",
            "isCorrect": false
          },
          {
            "Text": "Der Integrations-Test testet Code im zusammenspiel.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist ein Beta-Test?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Ist das gleiche wie der Whitebox-Test",
            "isCorrect": false
          },
          {
            "Text": "Dieser Test existiert nicht.",
            "isCorrect": false
          },
          {
            "Text": "Keine dieser Aussagen trifft zu.",
            "isCorrect": false
          },
          {
            "Text": "Es wird eine Beta-Version entwickelt diese wird dann vom Endbenutzer getestet.",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Welcher Software-Test exisitiert nicht",
        "ExerciseTopic": "Testing",
        "Difficulty": 30,
        "Answers": [
          {
            "Text": "Komponententest",
            "isCorrect": false
          },
          {
            "Text": "Systemtest",
            "isCorrect": false
          },
          {
            "Text": "THIS-Zeiger verweist auf das aktuelle Objekt einer Klasse.",
            "isCorrect": true
          },
          {
            "Text": "Schreibtisch-Test",
            "isCorrect": false
          },
          {
            "Text": "Diesen Zeiger gibt es nur in C++.",
            "isCorrect": false
          },
          {
            "Text": "Zeiger gibt es nur in prozudualen Programmiersprachen.",
            "isCorrect": false
          },
          {   
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Pech",
            "isCorrect": false
          },
          {
            "Text": "einen schlechten Programmierer",
            "isCorrect": false
          },
          {
            "Text": "schlechte qualität der Software",
            "isCorrect": false
          },
          {
            "Text": "nicht ausreichend getestet",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Wann sollte man aufhören zu testen",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Wenn die eingeplante Zeit zu Ende ist",
            "isCorrect": false
          },
          {
            "Text": "wenn alle Tests durchgelaufen sind",
            "isCorrect": false
          },
          {
            "Text": "Wenn man keine Lust mehr hat",
            "isCorrect": false
          },
          {
            "Text": "wenn alle Tests durchgelaufen sind und sie keine Fehler ausgegben haben",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Was ist der Unterschied zwischen re-testing und Regressions-Test",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "re-testing is done after faults are fixed; regression testing is done earlier",
            "isCorrect": false
          },
          {
            "Text": "re-testing looks for unexcpected side effects; regression testing is repeating those tests",
            "isCorrect": false
          },
          {
            "Text": "re-testing is done by developers; regression testing is done by independent",
            "isCorrect": false
          },
          {
            "Text": " re-testing is running a test againg; regressions testing looks for unexpet side effects ",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Die Norm, die Definitionen von Prüfbegriffen enthält, ist",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "ISO/IEC 12207",
            "isCorrect": false
          },
          {
            "Text": "BS7925-2",
            "isCorrect": false
          },
          {
            "Text": "ANSI/IEEE 829",
            "isCorrect": false
          },
          {
            "Text": "BS7925-1",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Ein Tool, das die Rückverfolgbarkeit, die Aufzeichnung von Fehlern von Tests unterstützt, heißt",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "a dynamic analysis tool",
            "isCorrect": false
          },
          {
            "Text": "a test execution tool",
            "isCorrect": false
          },
          {
            "Text": "a test management tool",
            "isCorrect": false
          },
          {
            "Text": "a debugging tool",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Welche der folgenden Antwortmöglichkeiten ist kein Teil des perfomance tests?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "response time",
            "isCorrect": false
          },
          {
            "Text": "transaction rates",
            "isCorrect": false
          },
          {
            "Text": "simulating many users",
            "isCorrect": false
          },
          {
            "Text": "recovery test",
            "isCorrect": true
          }
        ]
      },
      {
        "ExerciseText": "Welche Informationen sollte in einem incident report stehen?",
        "ExerciseTopic": "Testing",
        "Difficulty": 20,
        "Answers": [
          {
            "Text": "Details zur Testumgebung",
            "isCorrect": false
          },
          {
            "Text": "Schwere und Vorrangigkeit",
            "isCorrect": false
          },
          {
            "Text": "Wie der Fehler reproduziert werden kann.",
            "isCorrect": false
          },
          {
            "Text": "Ein Lösungsvorschlag für den Fehler.",
            "isCorrect": true
          }
        ]
      },
          {
            "ExerciseText": "Was ist der Standard-Zugriffsmodifikator in einer Klasse?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Protected.",
                "isCorrect": false
              },
              {
                "Text": "Private.",
                "isCorrect": true
              },
              {
                "Text": "Public.",
                "isCorrect": false
              },
              {
                "Text": "Default.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist eine rein virtuelle Funktion?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "Dies existiert nicht.",
                "isCorrect": false
              },
              {
                "Text": "Virtuelle Funktionen gibt es nur in Linux.",
                "isCorrect": false
              },
              {
                "Text": "Virtuelle Funktionen gibt es nur in Java.",
                "isCorrect": false
              },
              {
                "Text": "Eine reine virtuelle Funktion ist eine Funktionalität, welche nur in prozudualen Programmiersprachen angewendet wird.",
                "isCorrect": false
              },
              {
                "Text": "Eine reine virtuelle Funktion ist eine Funktion, die in der abgeleiteten Klasse überschrieben werden kann, aber nicht definiert werden kann.",
                "isCorrect": true
              },
              {
                "Text": "Virtuelle Funktionen ermöglichen es Funktionen in anderen Programmiersprachen einzubinden.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist ein Copy-Konstruktor?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "Dies ist ein spezieller Konstruktor, um ein neues Objekt als Kopie eines bestehenden Objekts zu erzeugen.",
                "isCorrect": true
              },
              {
                "Text": "Der Copy-Konstruktor gibt es nur in C++.",
                "isCorrect": false
              },
              {
                "Text": "Der Copy-Konstruktor ist eine Kopie des Default-Konstruktor.",
                "isCorrect": false
              },
              {
                "Text": "Der Copy-Konstruktor wird nach dem Destruktor aufgerufen.",
                "isCorrect": false
              },
              {
                "Text": "Dies ist ein spezieller Konstruktor, welche eine Kopie des Default-Konstruktor ist.",
                "isCorrect": false
              },
              {
                "Text": "Dies ist ein spezieller Destruktor, um ein neues Objekt als Kopie eines bestehenden Objekts zu löschen.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was stellt das Schlüsselwort virtual in der Methodendefinition dar?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "Das bedeutet, dass wir die Methode nicht nutzen können.",
                "isCorrect": false
              },
              {
                "Text": "Das bedeutet, dass wir die Methode nur intern nutzen können.",
                "isCorrect": false
              },
              {
                "Text": "Das bedeutet, dass wir die Methode überschreiben können.",
                "isCorrect": true
              },
              {
                "Text": "Das bedeutet, dass wir die Methode unterschreiben können.",
                "isCorrect": false
              },
              {
                "Text": "Das bedeutet, dass wir die Variable nur intern nutzen können.",
                "isCorrect": false
              },
              {
                "Text": "Das bedeutet, dass wir die Variable überschreiben können.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Kann eine statische Methode nicht-statische Member verwenden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": true
              },
              {
                "Text": "Richtig.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist statisches und dynamisches Binden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "Statisches Binden existiert nur in prozedualen Programmiersprachen. Dynamisches Binden nur in objektorierntierten Programmiersprachen.",
                "isCorrect": false
              },
              {
                "Text": "Statisches Binden existiert nur in C++. Dynamisches Binden nur in Java.",
                "isCorrect": false
              },
              {
                "Text": "Statisch: Name wird vor der Kompilierung mit der Klasse verknüpft; dynamisch: Name wird während der der Kompilierung mit der Klasse verknüpft.",
                "isCorrect": false
              },
              {
                "Text": "Statisches Binden wird auch spätes Binden und dynamisches Binden wird auch frühes Binden genannt.",
                "isCorrect": false
              },
              {
                "Text": "Dynamisches Binden existiert nur in prozedualen Programmiersprachen. Statisches Binden nur in objektorierntierten Programmiersprachen.",
                "isCorrect": false
              },
              {
                "Text": "Statisch: Name wird während der Kompilierung mit der Klasse verknüpft; dynamisch: Name wird während der Laufzeit mit der Klasse verknüpft.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Wie viele Instanzen können für eine abstrakte Klasse erzeugt werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "Maximal 5.",
                "isCorrect": false
              },
              {
                "Text": "0.",
                "isCorrect": true
              },
              {
                "Text": "Unbegrenzt.",
                "isCorrect": false
              },
              {
                "Text": "Minimal 5.",
                "isCorrect": false
              },
              {
                "Text": "Maximal 10.",
                "isCorrect": false
              },
              {
                "Text": "Minimal 10.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Welches Schlüsselwort kann zum Überladen verwendet werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 30,
            "Answers": [
              {
                "Text": "overloading.",
                "isCorrect": true
              },
              {
                "Text": "overload.",
                "isCorrect": false
              },
              {
                "Text": "overloaded.",
                "isCorrect": false
              },
              {
                "Text": "overhead.",
                "isCorrect": false
              },
              {
                "Text": "overheaded.",
                "isCorrect": false
              },
              {
                "Text": "overheading.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was sind die zentralen zwei Elemente in der Objektorientierung?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Klassen und Objekte.",
                "isCorrect": true
              },
              {
                "Text": "Strukturen und Methoden.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Wie verändere ich den Zustand eines Objektes?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Mit einer Methode.",
                "isCorrect": true
              },
              {
                "Text": "Mit einer Klasse.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Klassen beschreiben wie Objekte aussehen.",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Objekte repräsentieren kontrete Instanzen [0, n] einer Klasse.",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Klassen beschreiben Attribute und Methoden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Objekte repräsentieren den Zustand eines Attributs?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": false
              },
              {
                "Text": "Falsch.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Attribute repräsentieren den Zustand eines Objektes?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Methoden repräsentieren das Verhalten einer Klasse?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": false
              },
              {
                "Text": "Falsch.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist ein Vorteil der objektorienterter Programmierung?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Man bewegt sich immer in einer Objekt-Welt. Es entsteht eine adäquate und durchgängige Betrachtungsweise.",
                "isCorrect": true
              },
              {
                "Text": "Variablen müssen alle mit einem kleinen Buchstaben starten.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist ein Nachteil der objektorienterter Programmierung?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Objekte sind immer eine (starke) Vereinfachung, sie können manchmal sehr Abstrakt werden.",
                "isCorrect": true
              },
              {
                "Text": "Variablen müssen alle mit einem kleinen Buchstaben starten.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Nenne zwei Synonyme für Objekt?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Instanz, Member.",
                "isCorrect": true
              },
              {
                "Text": "Boolean, Strings.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Nenne zwei Synonyme für Klasse?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Klassentyp, Typ.",
                "isCorrect": true
              },
              {
                "Text": "Boolean, Strings.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Durch den Aufruf von Methoden können Attribute und somit der Zustand des Objektes verändert werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Der Binärcode einer Klasse wird vom Kompiler zu Quelltext kompiliert?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": false
              },
              {
                "Text": "Falsch.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Der Quelltext einer Klasse wird vom Kompiler zu Binärcode kompiliert?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": true
              },
              {
                "Text": "Falsch.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Nenne einige elementaren (primitiven) Datentypen, welche bei der Initialisierung von Attributen verwendet werden können?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Double, Float, Long, Int, Short, Byte, Char, Boolean.",
                "isCorrect": true
              },
              {
                "Text": "Double, Float, Long, Int, Short, Byte, String, Boolean.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Nenne einen typischen Klassentyp, welcher bei der Initialisierung eines Attributs verwendet wird?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Double.",
                "isCorrect": false
              },
              {
                "Text": "String.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist wichtig zu beachten bei der Implementation eines Konstruktors?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Hat keinen Rückgabewert.",
                "isCorrect": true
              },
              {
                "Text": "Beim Erzeugen eines Objektes ermöglicht es nicht das ordentliche Initialisieren eines Objektes.",
                "isCorrect": false
              },
              {
                "Text": "Beinhaltet nie ausführbare Anweisungen.",
                "isCorrect": false
              },
              {
                "Text": "Wird beim Erzeugen eines Objektes nie automatisch aufgerufen.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Was ist der Hauptvorteil von Methoden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Einmal implementieren, aber an n-Stellen aufrufen und wiederverwenden.",
                "isCorrect": true
              },
              {
                "Text": "Die geschweiften Klammern bestimmen den Scope.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Können zwei Methoden denselben Namen besitzen?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Ja, wenn ihre Parameter unterschiedliche Datentypen besitzen oder sie eine unterschiedliche Anzahl Parameter haben.",
                "isCorrect": true
              },
              {
                "Text": "Nein.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Variablen eines elementaren Datentyps enthalten jeweils mehrere Werte?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": true
              },
              {
                "Text": "Wahr.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Variablen eines elementaren Datentyps enthalten jeweils nur einen einzigen Wert?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Der Computer speichert alle Werte (Zahlen, Zeichen, etc.) als Bitmuster (Folge von 1 und 0) ab?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Mit einem Datentyp wird beschrieben, wie dieses Muster interpretiert wird und welcher Wertebereich damit möglich ist?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Jeder Datentyp legt implizit fest, welche Operationen möglich sind, bzw. wie diese ausgeführt werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Datentypen legen die Genauigkeit durch die explizite Angabe des Wertebereichs fest?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": true
              },
              {
                "Text": "Wahr.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Jeder Datentyp legt implizit auch eine Genauigkeit fest?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "An welchen Stellen können elementare Datentypen eingesetzt werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Konstruktoren, Klassen.",
                "isCorrect": false
              },
              {
                "Text": "Lokalen Variablen, Parameter von Methoden und Konstruktoren.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Überall, wo ein Typ (Klasse) verlangt ist, kann häufig auch ein elementarer Datentyp verwendet werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": false
              },
              {
                "Text": "Wahr.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Überall, wo ein Typ (Klasse) verlangt ist, kann nie ein elementarer Datentyp verwendet werden?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Falsch.",
                "isCorrect": true
              },
              {
                "Text": "Wahr.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Welche primitiven Datentypen gibt es für ganze Zahlen?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "byte, short, int, long.",
                "isCorrect": true
              },
              {
                "Text": "float, double.",
                "isCorrect": false
              }
            ]
          },
          {
            "ExerciseText": "Welche Datentypen gibt es für Gleitkommazahlen?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "byte, short.",
                "isCorrect": false
              },
              {
                "Text": "float, double.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "String ist ein primitiver Datentyp?",
            "ExerciseTopic": "OOP",
            "Difficulty": 10,
            "Answers": [
              {
                "Text": "Wahr.",
                "isCorrect": false
              },
              {
                "Text": "Falsch.",
                "isCorrect": true
              }
            ]
          },
          {
            "ExerciseText": "Was ist Casting bei Datentypen?",
            "ExerciseTopic": "OOP",
            "Difficulty": 20,
            "Answers": [
              {
                "Text": "Namensumwandlung: Konvertierung des Namens der Variable.",
                "isCorrect": false
              },
              {
                "Text": "Die Variablen stellen sich vor um eine Rolle in dem Projekt zu bekommen.",
                "isCorrect": false
              },
              {
                "Text": "Casting konvertiert Variablen zu Pointern.",
                "isCorrect": false
              },
              {
                "Text": "Typumwandlung: Konvertierung eines Wertes von einem Typ zu einem Anderen.",
                "isCorrect": true
              }
            ]
          }
    ]
  }
]
  }
]